/* COMMON */
.body__container {
  font-family: 'Roboto', sans-serif;
  font-size: 16px;
  font-weight: 400;
  color: #333;
}

/* a태그는 기본적으로 텍스트에 밑줄이 쳐지는 문제가 있습니다. */
a {
  /* text-decoration은 밑줄을 넣을것인지, 가운데 줄을 넣을 것인지등 설정하는 속성 */
  text-decoration: none;
}

/* FLOAT CLEARFIX */
.clearfix::after {
  content: "";
  clear: both;
  display: block;
}
.float--left {
  float: left;
}
.float--right {
  float: right
}

/* BTN */
.btn {
  /* 반복적으로 적용되는 스타일인 경우 전역적으로 사용할 수 있도록 미리정의해놓는것이 좋습니다. */
  /* 버튼 클래스 설정 */
  height: 34px;
  background: #eee linear-gradient(to bottom, #fcfcfc, #eee);
  border: 1px solid #d5d5d5;
  border-radius: 4px;
  /*블록요소처럼 만들어줍니다.*/
  /* inline요소의 특성을 가지고 있는 flex ,inline요소는 수평으로 만들어지기는 하지만 위아래 패딩, 가로사이즈등을 가질 수 없는
  특성을 가직고 있습니다. 인라인 요소는 텍스트를 작성할때 사용하는 요소로 띄어쓰기 하나 효과가 있습니다. */
  /* 이에 sign-in과 sign-up사이에 띄어쓰기 한개만큼의 여백이 있습니다. */
  display: inline-flex;
  align-items: center;
  padding: 0 12px;
  font-size: 14px;
  font-weight: 500px;
  line-height: 1.5;
  cursor: pointer;
  box-sizing: border-box;
  position: relative;
  /* 기본적으로 글자색이 따로 설정되지 않으면 파란색이 들어가게 됩니다. (추가정의 보완)*/
  color: #333;
}

/* 마우스를 btn 요소에 올려놓는 경우 */
.btn:hover::before {
  content: "";
  /* 부모요소의 position이 설정되어 있지 않은 경우, 부모요소로 가서 position: relative;를 설정해줍니다. */
  /* position: 절대요소를 사용 */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* 어두운 색이 약간 추가되도록 설정했습니다. */
  background: rgba(0,0,0,0.07);
}

/* btn의 btn--primary속성 */
.btn.btn--primary {
  /* 테두리 색 회색빛으로 설정 */
  border: 1px solid #65b836;
  /* 글자색 : 흰색 */
  color: #fff;
  /* 배경색상 초록색 */
  background: #55a532 linear-gradient(#91dd70, #55ae2e);
}

/* INPUT TEXT */
.input--text {
  height: 34px;
  padding: 0 10px;
  border: 1px solid #ddd;
  border-radius: 5px;
  /* 입력에 따라서 요소 크기가 변화하는 것방지 */
  box-sizing: border-box;
  /* 요소를 선택했을때 아웃라인 사용하지 않겠다는 의미 */  
  outline: none;
  /* inset을 통해서 내부상단에 그림자가 생기도록 했습니다. (원래는 바깥 하단)    */
/*  0.075는 7.5 퍼센트를 의미합니다.  */
  box-shadow: inset 0 1px 2px rgba(0, 0, 0,0.075);
  font-size: 16px;
}
/* focus된 상태를 focus로 표현, 안된상태 blur라고 합니다.  css에서 blur는 존재하지 않습니다. */
.input--text:focus {
  border-color: #51a7e8;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0,0.075),
              0 0 5px rgba(81, 167, 232, 0.5);
}
/* 실험적으로 사용하고 있는 동작 */
/* Vendor Prefix (브라우저 업체별 접두사)*/

/* Chrome */
.input--text::-webkit-input-placeholder { color: #cacaca; }
/* IE, EDGE */
.input--text::-ms-input-placeholder { color: #cacaca; }
/* Mozila */
.input--text::-moz-input-placeholder {
  color: #cacaca;
}


/* HEADER */
header {
  /* 앞에 0으로 시작하는 것은 생략이 가능합니다 0.75 = .75  */
  border-bottom: 1px solid rgba(0, 0, 0, .75);
  box-shadow: 0 0 5px rgba(0,0,0,.75);
  background: #fff; /* #FFF 와 동일  #FFFFFF가 맞지만 반복되는 경우 3개로 축소할 수 있습니다. */
}
header .inner {
  /* inner의 최대 너비 설정 (상황에 따라 줄어들 수 있습니다.) */
  max-width: 980px;
  /* height의 값은 auto이므로 부모요소인 header 의 heigth는 자식요소인 header .inner의 height에 영향을 받게 됩니다. */
  /* header의 높이도 78px이 됩니다. (header에 hegith:78px; 생략가능합니다.) */
  height: 78px;
  /* 좌우에 margin을 auto를 줘서 가운데 정렬되도록 합니다. */
  /* margin: 0 auto;를 사용하려면 기본적으로 가로너비가 정의되어 있어야 합니다.  */
  margin: 0 auto;
}
/* .inner는 중앙정렬 용도로 사용한 것이므로 .menu-group과 연관성이 떨어지기때문에 후손선택자를 이요하여 건너띄어 작성했습니다. */
/* header .inner .menu-group */
header .menu-group {
  /* 로고부분과 메인메뉴전체를 `수평정렬 `했습니다. */
  display: flex;
  /* header전체의 높이만큼확장하도록 합니다. */
  /* flex가 있으면 할 수 있는 수직정렬 */
  align-items: center;
  /* height를 100%로 설정할 경우, menu-group의 부모요소인 inner요소의 영향을 받아 높이가 78px 이 됩니다. */
  height: 100%;
}
header .logo {
  margin-right: 10px;
}
header .logo a {
  /* image태그에서는 alt가 필수요소입니다. */
  /* 따라서 background: url(경로);를 통해서 css에서 이미지를  넣을 경우 대체텍스트(alt역할)은 html에 직접입력해줍니다.*/
  /* 현재 index.html에서 a태그를 의미합니다. */
  background: url("../img/logo.svg");
  width: 32px;
  height: 32px;
  display: block;
  /* 대체텍스트를 입력하는 명시적인 방법 왼쪽으로 -9999 만큼 밀려나도록해서 화면에서 보이지 않도록 합니다.*/
  /* 텍스트를 사라지게하려고 이 수치를 적었구나 이해할 수 있는 통용되는 명시방법입니다. 
  (약속한것처럼 대체텍스트기법이라는 것을 알 수 있습니다.)*/
  text-indent: -9999px;
}
header .logo a:hover {
  background: url("../img/logo_on.svg");
}
header .main-menu {
  /* main-menu 안에 있는 자식요소들이 수평이 됩니다. */
  display: flex;
}
/* li 태그는 클릭되는 요소가 아닙니다. (실질적으로 클릭되는 것은 a 태그) */
/* 따라서 a태그에 삽입되도록 합니다. a태그는 inline요소로 padding의 위 아랫값을 제대로 사용할 수 없습니다.  */
/* a태그를 레이아웃이 가능한 block요소로 설정합니다. */
header .main-menu li a {
  display: block;
  padding: 10px;
  color: #3c4146;
}
header .main-menu li a:hover {
  color: #4078c0;
}
header .sign-group {
  display: flex;
  height: 100%;
  align-items: center;
}
header .btn-group {
  /* oreder라는 속성의 숫자가 제일 클수록 뒤로 밀려납니다. */
  order: 2;
  /* 버튼그룹안에 있는 요소 2개를 수평으로 만들기 위해서 display:flex;를 수행합니다. */
  display: flex;
}
header .btn-group .sign-in {
  /* 공간추가 */
  margin-right: 4px;
}
/* id 선택자 (고유해야합니다.)*/
/* id선택자는 클래스선택자에 우선합니다. */
#search-form {
  order: 1;
  /* 공간추가 */
  margin-right: 12px;
}

/* id선택자는 고유하므로 #search-form #search { ... } 이런식일 필요가 없습니다. */
#search {
  width: 160px;
  font-size: 14px;
}
/* 매번 html과 css에 클래스를 생성해주기 어려우므로 사용 */
/* searchid 선택자 형제 요소(+로표현) type이 submit인 태그 선택 */
#search + [type="submit"] {
  /* 화면상에 보이면 안되므로 display:none; 수행 */
  display: none;
}

header .sub-menu {
  /* order의 기본값은 0이므로 굳이 명시하지 않아도 됩니다. */
  /* order: 0; */
  
  /* li태그들이 수평이 되도록 하기 위해서 display: flex; 사용 */
  display: flex;
  /* 공간 추가 */
  margin-right: 10px;
}
header .sub-menu li a {
  padding: 8px;
  display: block;
  font-size: 13px;
  color: #3c4146;
}
header .sub-menu li a:hover{ 
  color: #4078c0;
}
